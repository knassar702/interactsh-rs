name: Main Tests
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'examples/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE*'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'examples/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE*'
  workflow_dispatch:

jobs:
  code_quality_check:
    strategy:
      fail-fast: false
      matrix:
        features:
          - "rustcrypto,rustls-tls,async-compat"
          - "openssl,native-tls,async-compat"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        
      - name: "Cargo Check"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: check
          args: --no-default-features --features ${{ matrix.features }}
          
      - name: "Linting"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: clippy
          args: --no-default-features --features ${{ matrix.features }} -- -D warnings

  formatting_check:
    needs: code_quality_check
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set Nightly Rust Toolchain"
        uses: "actions-rs/toolchain@v1"
        with:
          toolchain: nightly
          override: true
          components: rustfmt

      - name: "Formatting Check"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: fmt
          args: --check

  dependancy_audit:
    needs: formatting_check
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Audit"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: audit
          
  test_suite:
    needs: [code_quality_check, formatting_check]
    strategy:
      fail-fast: false
      matrix:
        features: 
          - "rustcrypto,rustls-tls,async-compat"
          - "rustcrypto,rustls-tls"
          - "openssl,native-tls,async-compat"
          - "openssl,native-tls"
          - "openssl-vendored,native-tls-vendored,async-compat"
          - "openssl-vendored,native-tls-vendored"
    runs-on: ubuntu-latest
    env:
      INTERACTSHRS_TEST_LOCAL_SERVER_TOKEN: ${{ secrets.LOCAL_SERVER_TOKEN }}
      INTERACTSHRS_TEST_LOCAL_SERVER_FQDN: ${{ secrets.LOCAL_SERVER_FQDN }}
      INTERACTSHRS_TEST_LOCAL_SERVER_DNS_OVERRIDE_ADDR: "127.0.0.1"
    services:
      local_server:
        image: ghcr.io/pyroraptor07/interactsh-local-test-server:main
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_REPO_TOKEN }}
        env:
          RUST_TEST_HOSTNAME: ${{ secrets.LOCAL_SERVER_FQDN }}
          RUST_TEST_AUTH_TOKEN: ${{ secrets.LOCAL_SERVER_TOKEN }}
        ports:
          - 80:80
          - 443:443
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
          
      - name: "Cargo Test"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --no-default-features --features ${{ matrix.features }} --no-fail-fast
        
  os_compat_nix:
    needs: test_suite
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        features: 
          - "rustcrypto,rustls-tls,async-compat"
          - "rustcrypto,rustls-tls"
          - "openssl,native-tls,async-compat"
          - "openssl,native-tls"
          - "openssl-vendored,native-tls-vendored,async-compat"
          - "openssl-vendored,native-tls-vendored"
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
          
      - name: "Cargo Build"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --no-default-features --features ${{ matrix.features }}
          
      - name: "Cargo Test"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --no-default-features --features ${{ matrix.features }} --no-fail-fast http_logs_from_pub

  os_compat_win-msvc:
    needs: test_suite
    strategy:
      fail-fast: false
      matrix:
        features: 
          - "rustcrypto,rustls-tls,async-compat"
          - "rustcrypto,rustls-tls"
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
          
      - name: "Cargo Build"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --no-default-features --features ${{ matrix.features }}
          
      - name: "Cargo Test"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --no-default-features --features ${{ matrix.features }} --no-fail-fast http_logs_from_pub

  os_compat_win_gnu:
    needs: test_suite
    strategy:
      fail-fast: false
      matrix:
        features: 
          - "rustcrypto,rustls-tls,async-compat"
          - "rustcrypto,rustls-tls"
    runs-on: windows-latest
    steps:
      - name: "Set GNU Rust Toolchain"
        uses: "actions-rs/toolchain@v1"
        with:
          toolchain: stable-x86_64-pc-windows-gnu
          override: true

      - name: "Checkout"
        uses: actions/checkout@v3
          
      - name: "Cargo Build"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --no-default-features --features ${{ matrix.features }}
          
      - name: "Cargo Test"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --no-default-features --features ${{ matrix.features }} --no-fail-fast http_logs_from_pub

  os_compat_win-msvc_openssl:
    needs: test_suite
    strategy:
      fail-fast: false
      matrix:
        features: 
          - "openssl,native-tls,async-compat"
          - "openssl,native-tls"
          - "openssl-vendored,native-tls-vendored,async-compat"
          - "openssl-vendored,native-tls-vendored"
    runs-on: windows-latest
    steps:
      - name: "Install OpenSSL"
        run: vcpkg install openssl:x64-windows-static-md

      - name: "Checkout"
        uses: actions/checkout@v3
          
      - name: "Cargo Build"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --no-default-features --features ${{ matrix.features }}
          
      - name: "Cargo Test"
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --no-default-features --features ${{ matrix.features }} --no-fail-fast http_logs_from_pub

  # Commenting this out for now; getting GNU and OpenSSL set up properly on Windows will take some more work
  # os_compat_win_gnu_openssl:
  #   needs: test_suite
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       features: 
  #         - "openssl,native-tls,async-compat"
  #         - "openssl,native-tls"
  #         - "openssl-vendored,native-tls-vendored,async-compat"
  #         - "openssl-vendored,native-tls-vendored"
  #   runs-on: windows-latest
  #   steps:
  #     - name: "Install OpenSSL"
  #       run: vcpkg install openssl:x64-windows-static-md

  #     - name: "Set GNU Rust Toolchain"
  #       uses: "actions-rs/toolchain@v1"
  #       with:
  #         toolchain: stable-x86_64-pc-windows-gnu
  #         override: true

  #     - name: "Checkout"
  #       uses: actions/checkout@v3
          
  #     - name: "Cargo Build"
  #       uses: actions-rs/cargo@v1.0.1
  #       with:
  #         command: build
  #         args: --no-default-features --features ${{ matrix.features }}
          
  #     - name: "Cargo Test"
  #       uses: actions-rs/cargo@v1.0.1
  #       with:
  #         command: test
  #         args: --no-default-features --features ${{ matrix.features }} --no-fail-fast http_logs_from_pub
